# Conditional Statement (조건문)

# 점수를 입력받아서 학점 출력하기
# 학점이 100~90 A 89~80 B 79~70 C 69~60 D 59~0 F
score = int(input('점수를 입력하세요 >>> '))
if score >= 90:
  print(f'점수는 {score}이고, 학점은 A입니다.')
elif score >= 80:
  print(f'점수는 {score}이고, 학점은 B입니다.')
elif score >= 70:
  print(f'점수는 {score}이고, 학점은 C입니다.')
elif score >= 60:
  print(f'점수는 {score}이고, 학점은 D입니다.')
else:
  print(f'점수는 {score}이고, 학점은 F입니다.')

# 임의의 정수를 입력받아 3의 배수인지 판별하기
num = int(input('정수를 입력하세요 >> '))
if num % 3 == 0 and num != 0:
  print('{}은 3의 배수입니다.'.format(num))
else:
  print('{}은 3의 배수가 아닙니다.'.format(num))

# 정수 3개를 공백을 기준으로 입력받아 가장 큰 수를 출력하기
n1, n2, n3 = input('공백을 기준으로 정수 3개 입력>>').split()
int(n1)
int(n2)
int(n3)
if n1 >= n2 and n1 >= n3:
  print(n1)
elif n2>= n1 and n2 >= n3:
  print(n2)
else:
  print(n3)

# 차량번호를 받아 차량번호가 짝수로 끝나면 운행가능. 아니면 운행불가 출력하기
car_num = input('차량번호 입력 >>')
if int(car_num[-1]) % 2 == 0:
  print('운행가능')
else:
  print('운행불가')

# Repetition statement while (반복문 while)

# 정수를 입력받아서 받은 횟수 만큼 Hello 출력하기
num = int(input('정수를 입력하세요 : '))
if num <=0:
  print('잘못된 입력입니다.')
else:
  n=0
  while n < num:
    print(f'{n+1}번째 Hello')
    n += 1

# 1부터 100사이의 모든 정수 중에서 7의 배수만 출력하기
i = 1
while i <= 100:
  if i % 7 == 0:
    print(i)
  i += 1

# 커피 1잔을 300원에 판매하는 커피자판기에 돈을 넣어 뽑을 수 있는 커피 잔 수와 잔돈 출력하기
money = int(input('커피자판기에 넣을 액수 >> '))
cup = money // 300
n = 1
while cup >= n:
  change = money - n * 300
  print(f'커피 {n}잔, 잔돈 {change}원')
  n += 1

# 0부터 9사이의 정수를 입력받아 입력된 정수가 5개가 될 때까지 입력받아 출력하기
# 중복된 값은 무시
# 1
a= []
while len(a) < 5:
  num = input('0~9 사이의 정수를 입력하세요 >> ')
  a.append(num)
  a = list(set(a))
print(a)
# 2
numbers = set()
 while len(numbers) < 5:
   n = int(input('0 ~ 9 사이 정수를 입력하세요 >>> '))
   numbers.add(n)
 print('모두 입력되었습니다.')
 print('입력된 값은 {}입니다.'.format(numbers))

# 1-100 사이의 모든 정수를 한 줄에 10개씩 출력하기
n = 1
while n <= 100:
  if n % 10 == 0:
    print(n)
  else:
    print(n, end='\t')
  n += 1

# 구구단 세로로 출력하기
a = 2
b = 1
while b<=9:
  a = 2
  while a<=9:
    print(f'{a} x {b} = {a*b}', end = '\t')
    a += 1
  print()
  b += 1

# # Repetition statement for (반복문 for)
# 1~5 사이의 모든 정수를 역순으로 출력하기
for i in range(5,0,-1):
  print(i)

# 사용자로부터 임의의 양의 정수를 하나 입력받은 후, 1부터 입력받은 정수까지 모든 정수의 합계 출력하기
num = int(input('임의의 양수 입력 >> '))
s = 0
for i in range(num+1):
  s += i
print(f'입력: {num}, 합계: {s}')

# 양의 정수를 하나 입력받아 그 숫자만큼 과일 이름을 입력받아 basket 리스트에 저장하기
num = int(input('몇 개의 과일을 보관할까요? >> '))
basket = []
for i in range(num):
  fruit = input(f'{i+1}번째 과일을 입력하세요 : ')
  basket.append(fruit)
print('입력받은 과일들은', basket, '입니다.')

# 10명학생의 중간고사 성적을 5점씩 증가시킨 score 리스트를 생성하고 출력하기
# 100점을 초과하면 안됌.
# 1
exam = [99,78,100,91,81,85,54,100,71,50]

for i in range(len(exam)):
  if exam[i] <= 95:
    exam[i] += 5
  else:
    exam[i] += 100-exam[i]

exam = [99, 78, 100, 91, 81, 85, 54, 100, 71, 50]
score = [min(n + 5, 100) for n in exam]
print(score)

# 1부터 99사이의 모든 정수를 대상으로 369게임의 결과를 출력하기

for i in range(1,100):
  a = i // 10
  b = i % 10
  condition1 = a % 3 == 0 and a != 0
  condition2 = b % 3 == 0 and b != 0
  if condition1 and condition2:
    print('짝짝', end = '\t')
  elif condition1 or condition2:
    print('짝', end = '\t')
  else:
    print(i, end = '\t')
  if b == 0:
    print()

# Other control statements
# 현재 10000원을 가지고 있을 때, 사용할 금액을 반복 입력받아 10000원을 모두 사용하기
# 0 이하의 금액은 사용이 불가하고, 현재 가지고 있는 돈보다 더 큰 금액도 사용할 수 없다

money = 10000

while True:
  print(f'현재 {money}원이 있습니다')
  if money == 0:
    break
  consume = int(input('사용할 금액 입력>> '))
  if consume <= 0:
    print('0이하의 금액은 사용할 수 없습니다.')
  elif consume > money:
       print(f'{consume - money}원이 부족합니다.')
  else:
     money -= consume

# 영화 평점을 1~5 사이의 정수로 입력받아서 해당 평점만큼 ★을 표시하기
# 표시할 수 있는 평점 범위를 벗어나면 재입력 요구하기

while True:
  grade = int(input('이번 영화의 평점을 입력하세요 >>> '))
  if grade >= 1 and grade <= 5:
    print('평점: {}'.format('★' * grade))
    break
  else:
    -print('평점은 1~5 사이만 입력할 수 있습니다.')

# 저장된 비밀번호 'qwerty' 맞추기
# 최대 5번 시도
count = 0
while True:
  if count == 5:
    print('비밀번호 횟수를 초과하였습니다.')
    break
  password = input('비밀번호를 입력하세요 >> ')
  if password == 'qwerty':
    print('비밀번호를 맞혔습니다.')
    break
  count += 1

for dan in range(2, 10):
    if dan % 2 == 0:
      print()
      continue
    for n in range(1, 10):
      if dan < n:
        break
      print('{}x{}={}'.format(dan, n, dan * n))
